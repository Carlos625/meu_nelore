import{i as q,k as I,l as S,n as x,o as R,q as u,p as s,s as p,t as m,w,v as d,x as A,T as c,y as b,z as y,A as B}from"./index-COgq7w1N.js";const v={apiKey:"AIzaSyB-Zbn4ykz7V7J31jBaPjBgh6I0h3Vz7q8",authDomain:"meu-nelore-web.firebaseapp.com",projectId:"meu-nelore-web",storageBucket:"meu-nelore-web.firebasestorage.app",messagingSenderId:"1071334977700",appId:"1:1071334977700:web:7454ebd7f1c9eb7e283631",measurementId:"G-RTQ9LDZK0D"},l=I(v),i=q(l);S(l);x(l);R(l);var D=(a=>(a.ATIVO="ativo",a.VENDIDO="vendido",a.ABATIDO="abatido",a.MORTO="morto",a))(D||{}),N=(a=>(a.PENDENTE="pendente",a.RESOLVIDO="resolvido",a))(N||{}),O=(a=>(a.DOENCA="doenca",a.FERIMENTO="ferimento",a.OUTRO="outro",a))(O||{});function r(a){if(a instanceof c)return a.toDate();if(a instanceof Date)return a}function E(a){if(a instanceof c)return a;if(a instanceof Date)return c.fromDate(a)}s(i,"animais");async function V(a){var t;try{const e=d(i,"animais",a),o=await A(e);if(!o.exists())throw new Error("Animal não encontrado");const n=o.data();return{id:o.id,numeroBrinco:((t=n.numeroBrinco)==null?void 0:t.toString())||"",corBrinco:n.corBrinco||"amarelo",dataEntrada:r(n.dataEntrada)||new Date,dataNascimento:r(n.dataNascimento),raca:n.raca||"",sexo:n.sexo,status:n.status||D.ATIVO,observacoes:n.observacoes,foto:n.foto,createdAt:r(n.createdAt)||new Date,updatedAt:r(n.updatedAt)||new Date}}catch(e){throw console.error("Erro ao buscar animal:",e),e}}async function P(a){try{console.log("Iniciando adição do animal:",a);const t={...a,numeroBrinco:a.numeroBrinco.toString(),dataEntrada:a.dataEntrada?c.fromDate(r(a.dataEntrada)||new Date):null,dataNascimento:a.dataNascimento?c.fromDate(r(a.dataNascimento)||new Date):null,createdAt:c.now(),updatedAt:c.now()};Object.keys(t).forEach(o=>{t[o]===void 0&&delete t[o]});const e=await y(s(i,"animais"),t);return console.log("Animal adicionado com sucesso! ID:",e.id),e.id}catch(t){throw console.error("Erro ao adicionar animal:",t),t}}async function z(a,t){try{const e={...t,numeroBrinco:t.numeroBrinco.toString(),dataEntrada:t.dataEntrada?c.fromDate(r(t.dataEntrada)||new Date):null,dataNascimento:t.dataNascimento?c.fromDate(r(t.dataNascimento)||new Date):null,updatedAt:c.now()};Object.keys(e).forEach(n=>{e[n]===void 0&&delete e[n]});const o=d(i,"animais",a);await B(o,e),console.log("Animal atualizado com sucesso!")}catch(e){throw console.error("Erro ao atualizar animal:",e),e}}async function j(a){const t=d(i,"animais",a);await b(t)}async function C(){try{const a=u(s(i,"animais"),p("createdAt","desc"));return(await m(a)).docs.map(e=>{var n;const o=e.data();return{id:e.id,numeroBrinco:((n=o.numeroBrinco)==null?void 0:n.toString())||"",corBrinco:o.corBrinco||"amarelo",dataEntrada:r(o.dataEntrada)||new Date,dataNascimento:r(o.dataNascimento),raca:o.raca||"",sexo:o.sexo,status:o.status||D.ATIVO,observacoes:o.observacoes,foto:o.foto,createdAt:r(o.createdAt)||new Date,updatedAt:r(o.updatedAt)||new Date}})}catch(a){throw console.error("Erro ao buscar animais:",a),a}}const h=s(i,"incidentes");async function k(a){return(await y(s(i,"incidentes"),{...a,createdAt:c.now(),updatedAt:c.now()})).id}async function F(a){const t=u(h,w("animalId","==",a));return(await m(t)).docs.map(o=>({id:o.id,...o.data()}))}async function K(a){const t=d(h,a),e=await A(t);return e.exists()?{id:e.id,...e.data()}:null}async function L(){const a=u(h);return(await m(a)).docs.map(e=>({id:e.id,...e.data()}))}async function M(a){try{const t=d(i,"incidentes",a);await b(t)}catch(t){throw console.error("Erro ao excluir incidente:",t),t}}const f=s(i,"vacinas");async function Z(a){try{if(console.log("Iniciando adição de vacina...",a),!a.animalBrinco)throw new Error("Brinco do animal é obrigatório");if(!a.nome)throw new Error("Nome da vacina é obrigatório");if(!a.dataAplicacao)throw new Error("Data de aplicação é obrigatória");const t=E(a.dataAplicacao)||c.now(),e=E(a.dataProxima),o={animalBrinco:a.animalBrinco,nome:a.nome,dataAplicacao:t,dataProxima:e,observacoes:a.observacoes,createdAt:c.now(),updatedAt:c.now()};return Object.keys(o).forEach(g=>{o[g]===void 0&&delete o[g]}),(await y(f,o)).id}catch(t){throw console.error("Erro ao adicionar vacina:",t),t}}async function G(a){try{const t=u(f,w("animalBrinco","==",a),p("dataAplicacao","desc"));return(await m(t)).docs.map(o=>{const n=o.data();return{id:o.id,animalBrinco:n.animalBrinco,nome:n.nome,dataAplicacao:r(n.dataAplicacao)||new Date,dataProxima:r(n.dataProxima),observacoes:n.observacoes,createdAt:r(n.createdAt)||new Date,updatedAt:r(n.updatedAt)||new Date}})}catch(t){throw console.error("Erro ao buscar vacinas:",t),t}}async function J(){try{const a=u(f,p("dataAplicacao","desc"));return(await m(a)).docs.map(e=>{const o=e.data();return{id:e.id,animalBrinco:o.animalBrinco,nome:o.nome,dataAplicacao:r(o.dataAplicacao)||new Date,dataProxima:r(o.dataProxima),observacoes:o.observacoes,createdAt:r(o.createdAt)||new Date,updatedAt:r(o.updatedAt)||new Date}})}catch(a){throw console.error("Erro ao buscar vacinas:",a),a}}async function Q(a){const t=u(f,w("animalBrinco","==",a));return(await m(t)).docs.map(o=>({id:o.id,...o.data()}))}s(i,"configuracoes");async function U(){try{const a=d(i,"configuracao","geral"),t=await A(a);if(!t.exists())return null;const e=t.data();return{id:t.id,quantidadeTotalBrinco:e.quantidadeTotalBrinco||300,createdAt:r(e.createdAt)||new Date,updatedAt:r(e.updatedAt)||new Date}}catch(a){throw console.error("Erro ao buscar configuração:",a),a}}async function H(a){try{const t=d(i,"configuracao","geral");await B(t,{...a,updatedAt:c.now()})}catch(t){throw console.error("Erro ao atualizar configuração:",t),t}}export{D as A,N as I,J as a,L as b,U as c,V as d,z as e,P as f,C as g,F as h,j as i,O as j,k,K as l,M as m,Q as n,G as o,Z as p,H as u};
